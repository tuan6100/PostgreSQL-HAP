apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql-slave
  namespace: default
  labels:
    component: postgresql-slave
spec:
  serviceName: "postgresql-slave"
  replicas: 3
  selector:
    matchLabels:
      component: postgresql-slave
  template:
    metadata:
      labels:
        component: postgresql-slave
    spec:
      containers:
        - name: postgresql
          image: postgres:16
          command:
            - sh
            - -c
            - |
              SLAVE_ID=$(hostname | grep -o '[0-9]\+$')
              echo "Setting up PostgreSQL replica with ID: ${SLAVE_ID}"
              
              echo "Starting pg_basebackup from master..."
              export PGPASSWORD="20226100"
              pg_basebackup -h postgresql-master -U tuan -D /tmp/pg_basebackup -X stream -P
              
              rm -rf /var/lib/postgresql/data/*
              
              mv /tmp/pg_basebackup/* /var/lib/postgresql/data/
              
              echo "primary_conninfo = 'host=postgresql-master port=5432 user=tuan password=20226100 application_name=slave${SLAVE_ID}'" > /var/lib/postgresql/data/postgresql.auto.conf
              echo "primary_slot_name = 'replica_slot_${SLAVE_ID}'" >> /var/lib/postgresql/data/postgresql.auto.conf
              touch /var/lib/postgresql/data/standby.signal
              
              cp /etc/postgresql/postgresql-slave.conf /var/lib/postgresql/data/postgresql.conf
              cp /etc/postgresql/pg_hba.conf /var/lib/postgresql/data/pg_hba.conf
              
              chown -R postgres:postgres /var/lib/postgresql/data
              chmod 700 /var/lib/postgresql/data
              
              echo "Starting PostgreSQL in replica mode..."
              exec docker-entrypoint.sh postgres
          ports:
            - containerPort: 5432
              name: postgres
          envFrom:
            - configMapRef:
                name: postgresql-auth
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresql-data
            - mountPath: /etc/postgresql
              name: postgresql-slave-configmap

        - name: filebeat
          image: docker.elastic.co/beats/filebeat:7.17.7
          args: ["-c", "/etc/filebeat.yml", "-e"]
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          securityContext:
            runAsUser: 0
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - name: filebeat-config
              mountPath: /etc/filebeat.yml
              readOnly: true
              subPath: filebeat.yml
            - name: postgresql-data
              mountPath: /var/lib/postgresql/data
              readOnly: true

      volumes:
        - name: postgresql-slave-configmap
          configMap:
            name: postgresql-slave-configmap
        - name: filebeat-config
          configMap:
            name: filebeat-postgresql-config

  volumeClaimTemplates:
    - metadata:
        name: postgresql-data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: hostpath
        resources:
          requests:
            storage: 1Gi